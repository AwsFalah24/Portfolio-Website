{"ast":null,"code":"var _jsxFileName = \"/Users/awsrawi/Desktop/Desktop/UOTTAWA/Portfolio-Website/src/MemoryGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport GameStatus from './components/GameStatus';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MemoryGame = () => {\n  _s();\n  const [gameState, setGameState] = useState('selection'); // 'selection', 'playing', 'end'\n  const [level, setLevel] = useState('');\n  const [theme, setTheme] = useState('');\n  const [highContrast, setHighContrast] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [flippedCards, setFlippedCards] = useState([]);\n  const [matchedPairs, setMatchedPairs] = useState([]);\n  const [gameStartTime, setGameStartTime] = useState(null);\n  const [gameEndTime, setGameEndTime] = useState(null);\n  const [attempts, setAttempts] = useState(0);\n  const [feedback, setFeedback] = useState('');\n  const [canFlip, setCanFlip] = useState(true);\n\n  // Game configuration based on level\n  const gameConfig = {\n    beginner: {\n      pairs: 6,\n      gridSize: 'three-by-four'\n    },\n    intermediate: {\n      pairs: 8,\n      gridSize: 'four-by-four'\n    },\n    advanced: {\n      pairs: 10,\n      gridSize: 'four-by-five'\n    }\n  };\n\n  // Theme data\n  const themeData = {\n    numbers: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],\n    letters: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'],\n    symbols: ['★', '♦', '♠', '♥', '♣', '☀', '☁', '⭐', '⚡', '❤']\n  };\n\n  // Initialize game\n  const startGame = () => {\n    const config = gameConfig[level];\n    const themeItems = themeData[theme].slice(0, config.pairs);\n    const gameCards = [...themeItems, ...themeItems].sort(() => Math.random() - 0.5).map((value, index) => ({\n      id: index,\n      value,\n      isFlipped: false,\n      isMatched: false\n    }));\n    setCards(gameCards);\n    setFlippedCards([]);\n    setMatchedPairs([]);\n    setAttempts(0);\n    setGameStartTime(Date.now());\n    setGameEndTime(null);\n    setFeedback('');\n    setGameState('playing');\n  };\n\n  // Handle card click\n  const handleCardClick = cardId => {\n    if (!canFlip || cards[cardId].isFlipped || cards[cardId].isMatched) return;\n    const newCards = [...cards];\n    newCards[cardId].isFlipped = true;\n    setCards(newCards);\n    const newFlippedCards = [...flippedCards, cardId];\n    setFlippedCards(newFlippedCards);\n    if (newFlippedCards.length === 2) {\n      setCanFlip(false);\n      const [firstId, secondId] = newFlippedCards;\n      const firstCard = newCards[firstId];\n      const secondCard = newCards[secondId];\n      if (firstCard.value === secondCard.value) {\n        // Match found\n        newCards[firstId].isMatched = true;\n        newCards[secondId].isMatched = true;\n        setCards(newCards);\n        setMatchedPairs([...matchedPairs, firstCard.value]);\n        setFeedback('Good job!');\n        setAttempts(attempts + 1);\n      } else {\n        // No match\n        setFeedback('Try again.');\n        setAttempts(attempts + 1);\n        setTimeout(() => {\n          newCards[firstId].isFlipped = false;\n          newCards[secondId].isFlipped = false;\n          setCards(newCards);\n        }, 1000);\n      }\n      setTimeout(() => {\n        setFlippedCards([]);\n        setCanFlip(true);\n        setFeedback('');\n      }, 1000);\n    }\n  };\n\n  // Check if game is complete\n  useEffect(() => {\n    var _gameConfig$level;\n    if (gameState === 'playing' && matchedPairs.length === ((_gameConfig$level = gameConfig[level]) === null || _gameConfig$level === void 0 ? void 0 : _gameConfig$level.pairs)) {\n      setGameEndTime(Date.now());\n      setGameState('end');\n    }\n  }, [matchedPairs, gameState, level]);\n\n  // Selection Screen\n  if (gameState === 'selection') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `memory-game ${highContrast ? 'high-contrast' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selection-screen\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"game-title\",\n            children: \"Memory Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selection-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Choose Level\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-group\",\n              children: Object.keys(gameConfig).map(lvl => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `level-btn ${level === lvl ? 'selected' : ''}`,\n                onClick: () => setLevel(lvl),\n                children: lvl.charAt(0).toUpperCase() + lvl.slice(1)\n              }, lvl, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"selection-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Choose Theme\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-group\",\n              children: Object.keys(themeData).map(thm => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `theme-btn ${theme === thm ? 'selected' : ''}`,\n                onClick: () => setTheme(thm),\n                children: thm.charAt(0).toUpperCase() + thm.slice(1)\n              }, thm, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"accessibility-section\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"accessibility-toggle\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: highContrast,\n                onChange: e => setHighContrast(e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this), \"High Contrast Mode\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"start-btn\",\n            disabled: !level || !theme,\n            onClick: startGame,\n            children: \"Start Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/small-game.html\",\n            className: \"back-btn\",\n            children: \"Back to Portfolio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Game Play Screen\n  if (gameState === 'playing') {\n    const config = gameConfig[level];\n    const progress = matchedPairs.length;\n    const totalPairs = config.pairs;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `memory-game ${highContrast ? 'high-contrast' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              fontFamily: 'Arial, sans-serif'\n            },\n            children: \"Memory Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GameStatus, {\n            progress: progress,\n            totalPairs: totalPairs,\n            attempts: attempts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"feedback-container\",\n            children: feedback && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feedback\",\n              children: feedback\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `game-grid ${config.gridSize}`,\n          children: cards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `card ${card.isFlipped ? 'flipped' : ''} ${card.isMatched ? 'matched' : ''}`,\n            onClick: () => handleCardClick(card.id),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-inner\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-front\",\n                children: \"?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-back\",\n                children: card.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)\n          }, card.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"restart-btn\",\n          onClick: () => setGameState('selection'),\n          children: \"New Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this);\n  }\n\n  // End Screen\n  if (gameState === 'end') {\n    const totalTime = Math.round((gameEndTime - gameStartTime) / 1000);\n    const accuracy = Math.round(gameConfig[level].pairs / attempts * 100) || 0;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `memory-game ${highContrast ? 'high-contrast' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"end-screen\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Game Complete!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Total Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [totalTime, \" seconds\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Accuracy:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [accuracy, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Attempts:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: attempts\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"encouragement\",\n            children: \"Nice work! Keep practicing.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"end-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"retry-btn\",\n              onClick: startGame,\n              children: \"Retry Same Level\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"next-btn\",\n              onClick: () => {\n                const levels = Object.keys(gameConfig);\n                const currentIndex = levels.indexOf(level);\n                const nextLevel = levels[(currentIndex + 1) % levels.length];\n                setLevel(nextLevel);\n                startGame();\n              },\n              children: \"Move to Next Level\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/small-game.html\",\n            className: \"back-btn\",\n            children: \"Back to Portfolio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n};\n_s(MemoryGame, \"hNd7pmHZ8il7w33EFInt7DbG35I=\");\n_c = MemoryGame;\nexport default MemoryGame;\nvar _c;\n$RefreshReg$(_c, \"MemoryGame\");","map":{"version":3,"names":["React","useState","useEffect","GameStatus","jsxDEV","_jsxDEV","MemoryGame","_s","gameState","setGameState","level","setLevel","theme","setTheme","highContrast","setHighContrast","cards","setCards","flippedCards","setFlippedCards","matchedPairs","setMatchedPairs","gameStartTime","setGameStartTime","gameEndTime","setGameEndTime","attempts","setAttempts","feedback","setFeedback","canFlip","setCanFlip","gameConfig","beginner","pairs","gridSize","intermediate","advanced","themeData","numbers","letters","symbols","startGame","config","themeItems","slice","gameCards","sort","Math","random","map","value","index","id","isFlipped","isMatched","Date","now","handleCardClick","cardId","newCards","newFlippedCards","length","firstId","secondId","firstCard","secondCard","setTimeout","_gameConfig$level","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","lvl","onClick","charAt","toUpperCase","thm","type","checked","onChange","e","target","disabled","href","progress","totalPairs","style","fontFamily","card","totalTime","round","accuracy","levels","currentIndex","indexOf","nextLevel","_c","$RefreshReg$"],"sources":["/Users/awsrawi/Desktop/Desktop/UOTTAWA/Portfolio-Website/src/MemoryGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport GameStatus from './components/GameStatus';\n\nconst MemoryGame = () => {\n  const [gameState, setGameState] = useState('selection'); // 'selection', 'playing', 'end'\n  const [level, setLevel] = useState('');\n  const [theme, setTheme] = useState('');\n  const [highContrast, setHighContrast] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [flippedCards, setFlippedCards] = useState([]);\n  const [matchedPairs, setMatchedPairs] = useState([]);\n  const [gameStartTime, setGameStartTime] = useState(null);\n  const [gameEndTime, setGameEndTime] = useState(null);\n  const [attempts, setAttempts] = useState(0);\n  const [feedback, setFeedback] = useState('');\n  const [canFlip, setCanFlip] = useState(true);\n\n  // Game configuration based on level\n  const gameConfig = {\n    beginner: { pairs: 6, gridSize: 'three-by-four' },\n    intermediate: { pairs: 8, gridSize: 'four-by-four' },\n    advanced: { pairs: 10, gridSize: 'four-by-five' }\n  };\n\n  // Theme data\n  const themeData = {\n    numbers: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],\n    letters: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'],\n    symbols: ['★', '♦', '♠', '♥', '♣', '☀', '☁', '⭐', '⚡', '❤']\n  };\n\n  // Initialize game\n  const startGame = () => {\n    const config = gameConfig[level];\n    const themeItems = themeData[theme].slice(0, config.pairs);\n    const gameCards = [...themeItems, ...themeItems]\n      .sort(() => Math.random() - 0.5)\n      .map((value, index) => ({\n        id: index,\n        value,\n        isFlipped: false,\n        isMatched: false\n      }));\n\n    setCards(gameCards);\n    setFlippedCards([]);\n    setMatchedPairs([]);\n    setAttempts(0);\n    setGameStartTime(Date.now());\n    setGameEndTime(null);\n    setFeedback('');\n    setGameState('playing');\n  };\n\n  // Handle card click\n  const handleCardClick = (cardId) => {\n    if (!canFlip || cards[cardId].isFlipped || cards[cardId].isMatched) return;\n\n    const newCards = [...cards];\n    newCards[cardId].isFlipped = true;\n    setCards(newCards);\n\n    const newFlippedCards = [...flippedCards, cardId];\n    setFlippedCards(newFlippedCards);\n\n    if (newFlippedCards.length === 2) {\n      setCanFlip(false);\n      const [firstId, secondId] = newFlippedCards;\n      const firstCard = newCards[firstId];\n      const secondCard = newCards[secondId];\n\n      if (firstCard.value === secondCard.value) {\n        // Match found\n        newCards[firstId].isMatched = true;\n        newCards[secondId].isMatched = true;\n        setCards(newCards);\n        setMatchedPairs([...matchedPairs, firstCard.value]);\n        setFeedback('Good job!');\n        setAttempts(attempts + 1);\n      } else {\n        // No match\n        setFeedback('Try again.');\n        setAttempts(attempts + 1);\n        setTimeout(() => {\n          newCards[firstId].isFlipped = false;\n          newCards[secondId].isFlipped = false;\n          setCards(newCards);\n        }, 1000);\n      }\n\n      setTimeout(() => {\n        setFlippedCards([]);\n        setCanFlip(true);\n        setFeedback('');\n      }, 1000);\n    }\n  };\n\n  // Check if game is complete\n  useEffect(() => {\n    if (gameState === 'playing' && matchedPairs.length === gameConfig[level]?.pairs) {\n      setGameEndTime(Date.now());\n      setGameState('end');\n    }\n  }, [matchedPairs, gameState, level]);\n\n  // Selection Screen\n  if (gameState === 'selection') {\n    return (\n      <div className={`memory-game ${highContrast ? 'high-contrast' : ''}`}>\n        <div className=\"container\">\n          <div className=\"selection-screen\">\n            <h1 className=\"game-title\">Memory Game</h1>\n            \n            <div className=\"selection-section\">\n              <h2>Choose Level</h2>\n              <div className=\"button-group\">\n                {Object.keys(gameConfig).map((lvl) => (\n                  <button\n                    key={lvl}\n                    className={`level-btn ${level === lvl ? 'selected' : ''}`}\n                    onClick={() => setLevel(lvl)}\n                  >\n                    {lvl.charAt(0).toUpperCase() + lvl.slice(1)}\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"selection-section\">\n              <h2>Choose Theme</h2>\n              <div className=\"button-group\">\n                {Object.keys(themeData).map((thm) => (\n                  <button\n                    key={thm}\n                    className={`theme-btn ${theme === thm ? 'selected' : ''}`}\n                    onClick={() => setTheme(thm)}\n                  >\n                    {thm.charAt(0).toUpperCase() + thm.slice(1)}\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"accessibility-section\">\n              <label className=\"accessibility-toggle\">\n                <input\n                  type=\"checkbox\"\n                  checked={highContrast}\n                  onChange={(e) => setHighContrast(e.target.checked)}\n                />\n                High Contrast Mode\n              </label>\n            </div>\n\n            <button\n              className=\"start-btn\"\n              disabled={!level || !theme}\n              onClick={startGame}\n            >\n              Start Game\n            </button>\n\n            <a href=\"/small-game.html\" className=\"back-btn\">\n              Back to Portfolio\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Game Play Screen\n  if (gameState === 'playing') {\n    const config = gameConfig[level];\n    const progress = matchedPairs.length;\n    const totalPairs = config.pairs;\n\n    return (\n      <div className={`memory-game ${highContrast ? 'high-contrast' : ''}`}>\n        <div className=\"container\">\n          <div className=\"game-header\">\n            <h1 style={{ fontFamily: 'Arial, sans-serif' }}>Memory Game</h1>\n            <GameStatus progress={progress} totalPairs={totalPairs} attempts={attempts} />\n            <div className=\"feedback-container\">\n              {feedback && <div className=\"feedback\">{feedback}</div>}\n            </div>\n          </div>\n\n          <div className={`game-grid ${config.gridSize}`}>\n            {cards.map((card) => (\n              <div\n                key={card.id}\n                className={`card ${card.isFlipped ? 'flipped' : ''} ${card.isMatched ? 'matched' : ''}`}\n                onClick={() => handleCardClick(card.id)}\n              >\n                <div className=\"card-inner\">\n                  <div className=\"card-front\">?</div>\n                  <div className=\"card-back\">{card.value}</div>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          <button\n            className=\"restart-btn\"\n            onClick={() => setGameState('selection')}\n          >\n            New Game\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // End Screen\n  if (gameState === 'end') {\n    const totalTime = Math.round((gameEndTime - gameStartTime) / 1000);\n    const accuracy = Math.round((gameConfig[level].pairs / attempts) * 100) || 0;\n\n    return (\n      <div className={`memory-game ${highContrast ? 'high-contrast' : ''}`}>\n        <div className=\"container\">\n          <div className=\"end-screen\">\n            <h1>Game Complete!</h1>\n            \n            <div className=\"results\">\n              <div className=\"result-item\">\n                <span>Total Time:</span>\n                <span>{totalTime} seconds</span>\n              </div>\n              <div className=\"result-item\">\n                <span>Accuracy:</span>\n                <span>{accuracy}%</span>\n              </div>\n              <div className=\"result-item\">\n                <span>Attempts:</span>\n                <span>{attempts}</span>\n              </div>\n            </div>\n\n            <div className=\"encouragement\">\n              Nice work! Keep practicing.\n            </div>\n\n            <div className=\"end-buttons\">\n              <button\n                className=\"retry-btn\"\n                onClick={startGame}\n              >\n                Retry Same Level\n              </button>\n              <button\n                className=\"next-btn\"\n                onClick={() => {\n                  const levels = Object.keys(gameConfig);\n                  const currentIndex = levels.indexOf(level);\n                  const nextLevel = levels[(currentIndex + 1) % levels.length];\n                  setLevel(nextLevel);\n                  startGame();\n                }}\n              >\n                Move to Next Level\n              </button>\n            </div>\n\n            <a href=\"/small-game.html\" className=\"back-btn\">\n              Back to Portfolio\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport default MemoryGame; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}